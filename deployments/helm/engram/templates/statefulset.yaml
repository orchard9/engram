apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "engram.fullname" . }}
  labels:
    {{- include "engram.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "engram.fullname" . }}-headless
  replicas: {{ .Values.statefulset.replicaCount }}
  selector:
    matchLabels:
      {{- include "engram.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: {{ .Values.statefulset.updateStrategy.type }}
  template:
    metadata:
      annotations:
        {{- include "engram.podAnnotations" . | nindent 8 }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.service.httpPort }}"
        prometheus.io/path: "/metrics"
      labels:
        {{- include "engram.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "engram.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "engram.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- if .Values.affinity.podAntiAffinity.enabled }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "engram.selectorLabels" . | nindent 16 }}
            topologyKey: {{ .Values.affinity.podAntiAffinity.topologyKey }}
        {{- if .Values.affinity.nodeAffinity.enabled }}
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- toYaml .Values.affinity.nodeAffinity.matchExpressions | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      initContainers:
      - name: init-permissions
        image: busybox:1.36
        command: ['sh', '-c', 'chown -R 65534:65534 /data']
        volumeMounts:
        - name: data
          mountPath: /data
        securityContext:
          runAsUser: 0
      containers:
      - name: engram
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/usr/local/bin/engram"]
        args:
        - "start"
        - "--http-port={{ .Values.service.httpPort }}"
        - "--grpc-port={{ .Values.service.grpcPort }}"
        ports:
        - containerPort: {{ .Values.service.httpPort }}
          name: http
          protocol: TCP
        - containerPort: {{ .Values.service.grpcPort }}
          name: grpc
          protocol: TCP
        env:
        - name: ENGRAM_DATA_DIR
          value: {{ .Values.config.dataDir | quote }}
        - name: ENGRAM_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ENGRAM_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: RUST_LOG
          value: {{ .Values.config.logLevel | quote }}
        {{- if .Values.config.mimalloc.largeOsPages }}
        - name: MIMALLOC_LARGE_OS_PAGES
          value: "1"
        {{- end }}
        {{- if .Values.config.mimalloc.reserveHugeOsPages }}
        - name: MIMALLOC_RESERVE_HUGE_OS_PAGES
          value: {{ .Values.config.mimalloc.reserveHugeOsPages | quote }}
        {{- end }}
        {{- with .Values.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.probes.startup.enabled }}
        startupProbe:
          httpGet:
            path: /health/alive
            port: http
          initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.startup.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
          successThreshold: {{ .Values.probes.startup.successThreshold }}
          failureThreshold: {{ .Values.probes.startup.failureThreshold }}
        {{- end }}
        {{- if .Values.probes.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          successThreshold: {{ .Values.probes.liveness.successThreshold }}
          failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
        {{- end }}
        {{- if .Values.probes.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: /api/v1/system/health
            port: http
            httpHeaders:
            - name: Accept
              value: application/json
          initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          successThreshold: {{ .Values.probes.readiness.successThreshold }}
          failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: data
          mountPath: /data
        - name: config
          mountPath: /config
          readOnly: true
        - name: tmp
          mountPath: /tmp
        {{- with .Values.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 10 }}
      volumes:
      - name: config
        configMap:
          name: {{ include "engram.fullname" . }}-config
          defaultMode: 0444
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      {{- with .Values.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "2"
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        {{- include "engram.labels" . | nindent 8 }}
      {{- with .Values.persistence.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      accessModes:
      - {{ .Values.persistence.accessMode }}
      {{- if .Values.persistence.storageClass }}
      storageClassName: {{ .Values.persistence.storageClass }}
      {{- else if .Values.global.storageClass }}
      storageClassName: {{ .Values.global.storageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      {{- with .Values.persistence.dataSource }}
      dataSource:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- end }}

[package]
name = "engram-core"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
keywords.workspace = true
categories.workspace = true
description = "Core memory and cognitive architecture for the Engram graph database"
readme = "../README.md"

[dependencies]
thiserror = { workspace = true }
anyhow = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
chrono = { workspace = true, features = ["serde"] }
tracing = { workspace = true }
dashmap = { workspace = true }
parking_lot = { workspace = true }
mimalloc = { workspace = true }
atomic_float = { workspace = true }
async-trait = "0.1"
syn = { version = "2.0", features = ["full", "visit"] }
utoipa = { workspace = true }
phf = { version = "0.11", features = ["macros"] }

# Lock-free concurrent data structures for HNSW
crossbeam-epoch = "0.9"
crossbeam-queue = "0.3"
crossbeam-deque = "0.8"
crossbeam-skiplist = "0.1"
crossbeam-utils = "0.8"

# High-performance collections
smallvec = { version = "1.13", features = ["union"] }
bumpalo = { version = "3.16", optional = true }
memmap2 = { version = "0.9", optional = true }

# NUMA-aware allocation  
# numa-rs = { version = "0.1", optional = true }

# Additional synchronization
# atomic-bitset = { version = "0.1", optional = true }

# Memory-mapped persistence dependencies
crc32c = { version = "0.6", optional = true }
page_size = { version = "0.6", optional = true }
libc = { version = "0.2", optional = true }
rayon = { version = "1.7", optional = true }

# Compression for persistence
lz4 = { version = "1.24", optional = true }
zstd = { version = "0.13", optional = true }

# Async runtime for tiered storage (optional)
tokio = { version = "1.0", optional = true, features = ["rt", "time", "sync", "macros", "rt-multi-thread"] }

# Serialization for WAL persistence
bincode = { version = "1.3", optional = true }

# SIMD abstractions
wide = { version = "0.7", optional = true }
num-traits = "0.2"

# Statistical and mathematical functions for psychological decay
statrs = { version = "0.16", optional = true }
libm = { version = "0.2", optional = true }
rand_distr = { version = "0.4", optional = true }
rand = { version = "0.8", optional = true }

# Probabilistic query engine and formal verification
# Note: z3 requires system Z3 library to be installed
# Install with: brew install z3 (macOS) or apt-get install libz3-dev (Ubuntu)
z3 = { version = "0.12", optional = true }
nalgebra = { version = "0.32", optional = true }

# Production monitoring dependencies
hwloc = { version = "0.5", optional = true }
uuid = { version = "1.6.1", features = ["v4", "v5"] }

# ANN library bindings for benchmarks
faiss = { version = "0.11", optional = true }

# Embedding infrastructure dependencies
tokenizers = { version = "0.19", optional = true }
ndarray = { version = "0.16", optional = true }
ort = { version = "2.0.0-rc.10", optional = true }

# Query expansion dependencies (Milestone 3.6 Task 003)
unicode-segmentation = { version = "1.11", optional = true }
fst = { version = "0.4", optional = true }

# Pattern completion dependencies (Milestone 8 Task 003)
lru = { version = "0.12", optional = true }

[target.'cfg(target_os = "linux")'.dependencies]
perf-event = { version = "0.4", optional = true }

[dev-dependencies]
criterion = { workspace = true }
proptest = { workspace = true }
quickcheck = { workspace = true }
insta = { version = "1.39", features = ["yaml"] }
bincode = { workspace = true }
rand = { workspace = true }
rand_chacha = "0.3"
approx = { workspace = true }
trybuild = "1.0"
tempfile = "3.0"
futures = "0.3"
serial_test = "3.2.0"
loom = "0.7"
tokio = { version = "1.0", features = ["test-util", "rt", "time", "sync", "macros", "rt-multi-thread"] }

[[bench]]
name = "pattern_detection"
harness = false

[[bench]]
name = "tokenizer"
harness = false

[features]
default = ["hnsw_index", "memory_mapped_persistence", "psychological_decay", "probabilistic_queries", "pattern_completion", "monitoring"]
# For systems where Z3 is available
full = ["default", "smt_verification"]

# Core HNSW features
hnsw_index = [
    "memmap2", 
    "lz4",
    "wide",
    "bumpalo"
]

# Memory-mapped persistence features
memory_mapped_persistence = [
    "memmap2",
    "crc32c", 
    "page_size",
    "libc",
    "rayon",
    "lz4",
    "zstd",
    "tokio",
    "bincode"
]

# Psychological decay functions with empirical validation
psychological_decay = [
    "statrs",
    "libm", 
    "rand_distr",
    "rand"
]

# Probabilistic query engine with formal verification
probabilistic_queries = [
    "statrs",
    "nalgebra"
]

# Pattern completion with hippocampal dynamics
pattern_completion = [
    "nalgebra",
    "statrs",
    "rayon",
    "lru"
]

# SMT-based formal verification (experimental)
smt_verification = [
    "z3",
    "probabilistic_queries"
]

# Production monitoring with lock-free metrics
monitoring = ["hwloc"]

# Development and testing features
testing = []
long_running_tests = []  # Enable psychology validations and multi-hour scenarios

# Benchmark features for ANN comparison
ann_benchmarks = ["faiss"]

# Multilingual embedding support with ONNX Runtime
multilingual_embeddings = ["tokenizers", "ndarray", "ort", "unicode-segmentation"]

# Query expansion with confidence budgets (Milestone 3.6 Task 003)
query_expansion = ["unicode-segmentation", "fst"]

# Fallback modes for compatibility
force_scalar_compute = []
single_threaded = []
disable_persistence = []

# Experimental features
# numa_aware = ["numa-rs"]

[lints]
workspace = true

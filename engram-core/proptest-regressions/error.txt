# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc ecf1bce55a9aa799d8e44382e3823e79fb3129712973d085932a875847b8297e # shrinks to confidence_value = 0.835895982806221
cc 3ff59f22912aa285829d6984ca24f1e8088a70b10a6f46cd4084a95ced8c9b93 # shrinks to (error_type, expected, actual, suggestion, example) = ("not found", "Valid node ID", "*Y୫}", "Validate data before processing", "if value.is_finite() { process(value) }")
cc ec9f0e66e3bb409ce9586c073c32ebc7cb85e1dbe20c23e59d7599b31efaa124 # shrinks to (error_type, expected, actual, suggestion, example) = ("exceeded", "Valid node ID", "\u{1cf16}2ÓjѨ𝍤🠼ቘ𑁝𐂭𖵮J𑊈¥ἲ&=`:g", "Check input bounds with clamp()", "let node = graph.get_node(\"id\").unwrap();")
cc 3009e623611cf6f9b66fad8f000be2b5022ed5d2e7a91dbbbd57d40814f6eb07 # shrinks to (error_type, expected, actual, suggestion, example) = ("not found", "Activation between 0.0 and 1.0", "8A{", "Validate data before processing", "let node = graph.get_node(\"id\").unwrap();")
cc c81834602e735d50b656828274edfccc3f650370b6655297da0edf7e679ffab1 # shrinks to (error_type, expected, actual, suggestion, example) = ("exceeded", "Valid node ID", "`&3kx𛲑&/ઑ 𐠂🉐🛺𞲎X\",J/&", "Check input bounds with clamp()", "value.clamp(0.0, 1.0)")
cc c9f49a867c9d6a00a3ea35510681e5666bc5e3b3367d689402277b4d1fd5b2bf # shrinks to (error_type, expected, actual, suggestion, example) = ("not found", "Valid node ID", "𛅧ೲ$ർ𑎃ஷ�qWѨ", "Validate data before processing", "if value.is_finite() { process(value) }")
cc ff3c8716c71fdd201b4e99c95019a55ab9f4daf799e90423bee19d6abe0d8bf6 # shrinks to (error_type, expected, actual, suggestion, example) = ("failed", "Activation between 0.0 and 1.0", "\u{cbf}tm>u$࠵Ã-Կ=&ëTs�䔀<t", "Validate data before processing", "value.clamp(0.0, 1.0)")
cc bdc144bf383c0516a2d8077a7cc688a521503e67e5469078915c3f89cdd3e0fa # shrinks to (error_type, expected, actual, suggestion, example) = ("not found", "Valid node ID", "௲፤𐳖𞓧<�J$[$>l🕴ఎਲ਼ୡѨ", "Use graph.nodes() to list available", "let node = graph.get_node(\"id\").unwrap();")
